<?php

namespace AlxDorosenco\VatlayerForLaravel\Tests\Unit\Factory\Prices;

use AlxDorosenco\VatlayerForLaravel\Factory\Prices\Price;
use Tests\TestCase;

class PriceTest extends TestCase
{
    /**
     * @var Price
     */
    private $price;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->price = new Price();
    }

    public function testSetAmountMethod()
    {
        $type = $this->price->setAmount(100);

        $this->assertEquals($this->price, $type);
        $this->assertEquals(100, $this->price->getData()['amount']);
    }

    public function testSetCountryCodeMethod()
    {
        $type = $this->price->setCountryCode('GB');

        $this->assertEquals($this->price, $type);
        $this->assertEquals('GB', $this->price->getData()['country_code']);
    }

    public function testSetTypeMethod()
    {
        $type = $this->price->setType('medical');

        $this->assertEquals($this->price, $type);
        $this->assertEquals('medical', $this->price->getData()['type']);
    }

    public function testSetInclMethod()
    {
        $type = $this->price->setIncl(1);

        $this->assertEquals($this->price, $type);
        $this->assertEquals(1, $this->price->getData()['incl']);
    }

    public function testGetDataMethod()
    {
        $this->price
            ->setAmount(100)
            ->setCountryCode('GB')
            ->setType('medical')
            ->setIncl(1);

        $data = $this->price->getData();

        $this->assertIsArray($data);
        $this->assertEquals([
            'amount' => 100,
            'country_code' => 'GB',
            'type' => 'medical',
            'incl' => 1
        ], $data);
    }

    public function testGetTypeMethod()
    {
        $type = $this->price->getType();

        $this->assertIsString($type);
        $this->assertEquals('price', $type);
    }
}
